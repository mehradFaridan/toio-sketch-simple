"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var cube_1 = require("@toio/cube");
var scanner_1 = require("./scanner");
var IdAddressScanner = (function (_super) {
    __extends(IdAddressScanner, _super);
    function IdAddressScanner(targets, fuzzy, timeoutMs) {
        if (fuzzy === void 0) { fuzzy = true; }
        if (timeoutMs === void 0) { timeoutMs = scanner_1.Scanner.DEFAULT_TIMEOUT_MS; }
        var _this = _super.call(this, timeoutMs) || this;
        _this.targets = targets.map(function (target) { return target.toLowerCase(); });
        _this.fuzzy = fuzzy;
        return _this;
    }
    IdAddressScanner.prototype.onDiscover = function (peripheral) {
        if (this.match(peripheral.address) || this.match(peripheral.id)) {
            this.eventEmitter.emit('discover', new cube_1.Cube(peripheral));
        }
    };
    IdAddressScanner.prototype.executor = function () {
        return;
    };
    IdAddressScanner.prototype.match = function (candidate) {
        if (this.fuzzy) {
            return this.targets.some(function (target) {
                return candidate.startsWith(target);
            });
        }
        else {
            return this.targets.includes(candidate);
        }
    };
    return IdAddressScanner;
}(scanner_1.Scanner));
exports.IdAddressScanner = IdAddressScanner;
//# sourceMappingURL=id-address-scanner.js.map